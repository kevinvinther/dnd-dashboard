---
interface EventData {
  id: number;
  name: string;
  description: string;
  tags: string[];
}

interface Props {
  filterTag?: string;
  width?: string;
  height?: string;
}

import Event from './Event.astro'; // Component
import events from '../data/events.json'; // Data about events

const { filterTag, width, height } = Astro.props as Props;

const flattenedEvents: EventData[] = events.flat();
const filteredEvents: EventData[] = filterTag
  ? flattenedEvents.filter((event) =>
      event.tags.some((tag) => tag.toLowerCase() === filterTag.toLowerCase())
    )
  : flattenedEvents;

const sortedEvents = filteredEvents.sort((a, b) => b.id - a.id);



---
<div
  class={`rounding-md overflow-y-auto p-6 mx-auto bg-white border border-gray-200 rounded-lg shadow-md no-scrollbar ${
    width || height ? '' : 'max-w-lg max-h-96'
  }`}
  style={`width: ${width || '100vw'}; height: ${height || '100vh'};`}
>

{ sortedEvents.length !== 0 ?  (
  sortedEvents.map((event) => (
    <Event
      title={event.name}
      description={event.description}
      tags={event.tags}
    />
  ))
) : ( <h1 class="text-2xl font-bold text-center">Ingen begivenheder her :( </h1> )
}
</div>
