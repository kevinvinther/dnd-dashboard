---
interface Session {
  name: string;
  date: string; 
}

import sessions from '../data/sessions.json'; 

const today = new Date();

const nextSession = sessions
  .map((session) => ({
    ...session,
    date: new Date(session.date), 
  }))
  .filter((session) => session.date >= today) 
  .sort((a, b) => a.date.getTime() - b.date.getTime())[0]; 

const danishDateFormatter = new Intl.DateTimeFormat('da-DK', {
  weekday: 'long', 
  year: 'numeric',
  month: 'long', 
  day: 'numeric',
});
---

<div class="p-6 max-w-md mx-auto bg-white border border-gray-200 rounded-lg shadow-md">
  {nextSession ? (
    <div>
      <h2 class="text-lg font-bold text-gray-800 mb-2">NÃ¦ste Session</h2>
      <p class="text-gray-700 text-sm font-medium mb-1">{nextSession.name}</p>
      <p class="text-gray-600 text-sm">{danishDateFormatter.format(nextSession.date)}</p>
    </div>
  ) : (
    <p class="text-gray-500 text-center">Ingen kommende sessioner.</p>
  )}
</div>
